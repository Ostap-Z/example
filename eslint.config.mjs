import globals from 'globals';
import pluginJs from '@eslint/js';
import tseslint from 'typescript-eslint';
import playwright from 'eslint-plugin-playwright';

export default [
  // {
  //   files: ['src/**/*.{js,mjs,cjs,ts}'],
  // },
  {
    languageOptions: { globals: globals.browser },
  },
  pluginJs.configs.recommended,
  ...tseslint.configs.recommended,
  {
    files: ['src/**/*.ts'],
    rules: {
      'no-constructor-return': 'error',
      'no-duplicate-imports': 'error',
      'no-promise-executor-return': ['error', { allowVoid: true }],
      'no-self-compare': 'error',
      'no-template-curly-in-string': 'warn',
      'no-unreachable-loop': 'error',
      'no-use-before-define': 'warn',
      'no-useless-assignment': 'error',
      'require-atomic-updates': 'error',
      'no-else-return': ['error', { allowElseIf: false }],
      'accessor-pairs': 'error',
      'arrow-body-style': 'warn',
      camelcase: 'error',
      'class-methods-use-this': 'error',
      curly: 'warn',
      'default-case': 'error',
      'default-case-last': 'error',
      'default-param-last': 'error',
      'dot-notation': 'warn',
      eqeqeq: ['error', 'smart'],
      'func-names': ['error', 'as-needed'],
      'func-style': ['error', 'declaration'],
      'grouped-accessor-pairs': ['warn', 'getBeforeSet'],
      'guard-for-in': 'error',
      'logical-assignment-operators': ['warn', 'never'],
      'max-params': ['error', 3],
      'new-cap': 'error',
      'no-array-constructor': 'error',
      'no-case-declarations': 'error',
      'no-console': ['warn', { allow: ['warn', 'error'] }],
      'no-empty-function': ['warn', { allow: ['constructors'] }],
      'no-eval': 'error',
      'no-implied-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-label': 'warn',
      'no-extra-bind': 'error',
      'no-implicit-coercion': ['error', { disallowTemplateShorthand: true }],
      'no-invalid-this': 'error',
      'no-lonely-if': 'error',
      'no-multi-assign': 'warn',
      'no-negated-condition': 'error',
      'no-nested-ternary': 'error',
      'no-new': 'warn',
      'no-new-wrappers': 'error',
      'no-param-reassign': 'error',
      'no-return-assign': 'error',
      'no-shadow-restricted-names': 'error',
      'no-throw-literal': 'error',
      'no-undef-init': 'warn',
      'no-unneeded-ternary': 'error',
      'no-useless-catch': 'error',
      'no-useless-concat': 'error',
      'no-useless-computed-key': 'error',
      'operator-assignment': ['warn', 'never'],
      'prefer-destructuring': 'warn',
      'prefer-object-spread': 'warn',
      'prefer-promise-reject-errors': 'warn',
      'prefer-rest-params': 'warn',
      'prefer-spread': 'warn',
      'prefer-template': 'warn',
      yoda: 'error',
      '@typescript-eslint/array-type': 'error',
      '@typescript-eslint/consistent-generic-constructors': 'error',
      '@typescript-eslint/consistent-indexed-object-style': 'error',
      '@typescript-eslint/consistent-type-assertions': [
        'error',
        {
          assertionStyle: 'as',
          objectLiteralTypeAssertions: 'never',
        },
      ],
      '@typescript-eslint/consistent-type-definitions': 'error',
    },
  },
  {
    ...playwright.configs['flat/recommended'],
    files: ['src/tests/**'],
  },
  {
    ...playwright.configs['flat/recommended'],

    files: ['src/tests/**'],
    rules: {
      'playwright/no-commented-out-tests': 'error',
      'playwright/no-duplicate-hooks': 'error',
      'playwright/prefer-hooks-on-top': 'warn',
      'playwright/require-top-level-describe': ['warn', { maxTopLevelDescribes: 1 }],
      'playwright/prefer-to-have-length': 'error',
      'playwright/prefer-to-have-count': 'error',
      'playwright/prefer-to-contain': 'error',
      'playwright/prefer-to-be': 'error',
      'playwright/prefer-strict-equal': 'error',
      'playwright/prefer-equality-matcher': 'error',
      'playwright/prefer-comparison-matcher': 'error',
      'playwright/expect-expect': 'off',
      '@typescript-eslint/no-unused-vars': [
        'error',
        {
          args: 'none',
        },
      ],
    },
  },
];
